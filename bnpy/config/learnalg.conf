# Keyword options for learning algorithms
#  specify
#   * how many laps (passes through data) to perform
#   * convergence assessment
#   * birth move settings
#   * merge move settings

########################################################### EM
[EM]
nLap=10
convergeSigFig=6
startLap=0
customFuncPath=None
customFuncArgs=None

[EMHelp]
nLap=Number of laps (passes thru entire dataset) to perform.
convergeSigFig=Number of significant figures at which ELBO (log evidence) objective should match between successive updates to terminate run early.
startLap=Integer number of laps to start learning at. Use only when restarting a previous run via ContinueRun.py.

########################################################### VB
[VB]
nLap=10
convergeSigFig=6
startLap=0
nCoordAscentItersLP=10
convThrLP=0.01
doOnlySomeDocsLP=1
doShowSeriousWarningsOnly=1
customFuncPath=None
customFuncArgs=None

[VBHelp]
nLap=Number of laps (passes thru entire dataset) to perform.
convergeSigFig=Number of significant figures at which ELBO (log evidence) objective should match between successive updates to terminate run early.
startLap=Integer number of laps to start learning at. Use only when restarting a previous run via ContinueRun.py.

########################################################### soVB
# Remember, online methods have nLap determined by OnlineDataPrefs.
[soVB]
rhoexp=0.5
rhodelay=1.0
startLap=0
nCoordAscentItersLP=10
convThrLP=0.01
doShowSeriousWarningsOnly=1
customFuncPath=None
customFuncArgs=None

[soVBHelp]
rhoexp=Scalar exponent in (0.5, 1] to use for learning rate schedule. At update t, rho[t] = (rhodelay + t)**(-rhoexp).
rhodelay=Scalar positive delay to use for learning rate schedule. At update t, rho[t] = (rhodelay + t)**(-rhoexp).
startLap=Integer number of laps to start learning at. Use only when restarting a previous run via ContinueRun.py.


########################################################### moVB
# Remember, online methods have nLap determined by OnlineDataPrefs.
[moVB]
doFullPassBeforeMstep=0
convergeSigFig=6
startLap=0
doMemoizeLocalParams=1
nCoordAscentItersLP=10
convThrLP=0.01
nHardItersLP=1
doDocTopicFracLP=0
doOnlySomeDocsLP=1
doShowSeriousWarningsOnly=1
customFuncPath=None
customFuncArgs=None

[moVBHelp]
doMemoizeLocalParams=Integer flag. If 1, memoizes local params across laps.
doFullPassBeforeMstep=Integer flag. If 1, waits until full pass thru dataset before performing the first Mstep. If 0, performs Mstep after the first batch.
convergeSigFig=Number of significant figures at which ELBO (log evidence) objective should match between successive updates to terminate run early.
startLap=Integer number of laps to start learning at. Use only when restarting a previous run via ContinueRun.py.

########################################################### Birth
[birth]
fracLapsBirth=0.9
targetSelectName=delayandsizebiased
minTargetObs=250
maxTargetObs=10000
maxTargetSize=300
minTargetSize=100
targetProbThr=0.1
birthPerLap=1
Kfresh=10
Kmax=200
nFreshLap=100
freshInitName=randexamples
freshAlgName=VB
doVizBirth=0
doSimpleThrTest=0
doRemoveRedundant=1
subsampleroutine=keepentiredocuments
earlyLap=0.0
cleanuppreselectroutine=marglikfromlistbipartite
cleanupNumMergeTrials=3
cleanupModifyOrigComps=0
batchBirthFrac=0.0
batchBirthLapLimit=10
topicmodelbirth=0
cleanupByDeletion=0
birthVerbose=0
birthWordsPerDocThr=100
creationroutine=datadriven
targetMinDocPerWord=20
targetRelDocThr=25
creationSmoothTopics=0
creationFixOutliers=0

[birthHelp]
fracLapsBirth=Fraction [0,1] of laps to perform births for
targetSelectName={'delaybiased','sizebiased','delayandsizebiased'}
targetProbThr=minimum fraction of resp. for data to be considered for birth
nTargetObs=Number of observations to subsample for targeted birth proposal
birthPerLap=Num. birth proposals per pass of the data
Kfresh=Max num. new components created by birth move
maxTargetSize=Max size of the target dataset for creating new components
subsampleroutine={'keepentiredocuments','keeponlymatchingwords'}. Name of selection method for targeted subsample. 

########################################################### Merge
[merge]
mergename=marglik
mergePerLap=25
doVizMerge=False
version=1
doVerbose=0
doWriteLog=0
doUpdateAllComps=0
doAllPairs=1
preselectroutine=marglik

[mergeHelp]
mergename=Name of routine that chooses which components to merge. Options {'random', 'marglik'}.
mergePerLap=Number of merge proposals to attempt after each lap through the dataset.
doVizMerge= Boolean flag. If true, plots visualization of every attempted merge move.
version=Integer flag. If 1, use faster, object-based merge tracking with better unit-tests. If 0, use older version (early Jan 2014).
doVerbose=Integer flag. If 1, print out details on every attempted merge. If 0, just print high-level summary after each lap.
doWriteLog=Integer flag. If 1, write log of attempted merge moves to csv file. If 0, do nothing.
doUpdateAllComps=Integer flag. If 1, merge proposal updates obsModel for all K comps (more costly, perhaps unnecessary but yields slightly more accurate ELBO). If 0, only the new merged component obsModel param is updated. Others are left alone.
